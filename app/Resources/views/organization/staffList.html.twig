{##
 # Copyright (c) 2018. Anime Twin Cities, Inc.
 #
 # This project, including all of the files and their contents, is licensed under the terms of MIT License
 #
 # See the LICENSE file in the root of this project for details.
#}
{% extends 'detour.html.twig' %}

{% set pageTitle = 'Staff List' %}

{% block additional_javascript %}
    <script type="text/javascript"
            src="{{ asset('node_modules/mdbootstrap/js/addons/datatables.min.js') }}"></script>
{% endblock %}

{% block additional_css %}
    <link rel="stylesheet" media="screen" type="text/css"
          href="{{ asset('node_modules/mdbootstrap/css/addons/datatables.min.css') }}"/>
{% endblock %}

{% block body %}
<div class="container bg-white">
    <div class="row">
        <div class="col-sm-12">
            <h2>Staff List</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <table id="staffList" class="table table-striped table-bordered table-sm" cellspacing="0" width="100%">
                <thead>
                <tr>
                    <th></th>
                    <th>Last Name</th>
                    <th>First Name</th>
                    <th>Nickname</th>
                    <th>Department</th>
                    <th>Position</th>
                    <th>Official Email</th>
                    <th>Registered</th>
                    <th></th>
                </tr>
                </thead>
                <tfoot>
                <tr>
                    <th class="noDropdown"></th>
                    <th class="noDropdown"></th>
                    <th class="noDropdown"></th>
                    <th class="noDropdown"></th>
                    <th></th>
                    <th class="noDropdown"></th>
                    <th class="noDropdown"></th>
                    <th></th>
                    <th class="noDropdown"></th>
                </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>


<script>

/* Formatting function for row details - modify as you need */
function format ( d ) {
    // `d` is the original data object for the row

    var full_name = d.first_name+' '+d.last_name;
    if (d.nickname) {
        full_name = d.first_name+' "'+d.nickname+'" '+d.last_name;
    }

    return '<table width="90%" cellpadding="0" cellspacing="0" border="0" style="padding-left:50px;">'+
                '<tr>'+
                    '<td style="background-color: black; width:2px;"></td>'+
                    '<th>Full name:</th>'+
                    '<td>'+full_name+'</td>'+
                    '<th>Date of Birth:</th>'+
                    '<td>'+d.dob+'</td>'+
                '</tr>'+
                '<tr>'+
                    '<td style="background-color: black; width:2px;"></td>'+
                    '<th>Phone:</th>'+
                    '<td>'+d.phone+'</td>'+
                    '<th>Personal Email:</th>'+
                    '<td>'+d.personal_email+'</td>'+
                '</tr>'+
                '<tr>'+
                    '<td style="background-color: black; width:2px;"></td>'+
                    '<th>Description:</th>'+
                    '<td>'+d.description+'</td>'+
                    '<th>Shirt Size:</th>'+
                    '<td>'+d.shirt+'</td>'+
                '</tr>'+
                '<tr>'+
                    '<td style="background-color: black; width:2px;"></td>'+
                    '<th>Other Departments:</th>'+
                    '<td colspan="3">'+d.other_departments+'</td>'+
                '</tr>'+
        '</table>';
}

$(document).ready(function() {
    var table = $('#staffList').DataTable( {
        initComplete: function () {
            this.api().columns().every( function () {
                var column = this;
                if(!$(column.footer()).hasClass('noDropdown')) {
                    var select = $('<select><option value=""></option></select>')
                        .appendTo( $(column.footer()).empty() )
                        .on( 'change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search( val ? '^'+val+'$' : '', true, false )
                                .draw();
                        } );

                    if ($(column.header()).html() === 'Department') {
                        var sortDepartmentObject = function (x, y) {
                            // to change to descending order switch "<" for ">"
                            return x.name > y.name ? 1 : -1;
                        };
                        column.data().unique().sort(sortDepartmentObject).each(function (d, j) {
                            select.append('<option value="' + d.name + '">' + d.name + '</option>')
                        });
                    } else {
                        column.data().unique().sort().each(function (d, j) {
                            var filterName = d;
                            if (typeof d === 'boolean') {
                                filterName = d ? 'Yes' : 'No';
                            }
                            select.append('<option value="' + filterName + '">' + filterName + '</option>')
                        });
                    }
                } else {
                    $(column.footer()).empty();
                }
            } );
            $("div.toolbar")
                .html(' <div class="custom-control custom-switch">'+
                        '<input type="checkbox" class="custom-control-input" id="showInactiveStaff">'+
                        '<label class="custom-control-label" for="showInactiveStaff">Show inactive staff</label>'+
                    '</div>');
            $("div.fbar")
                .html('<a href="" class="btn btn-primary btn-sm text-white">Add Staff</a>');
            $('#showInactiveStaff').change(function() {
                if(this.checked) {
                    table.ajax.url( '{{ path('ajax_staff_list') }}?showInactive=true' ).load();
                } else {
                    table.ajax.url( '{{ path('ajax_staff_list') }}?showInactive=false' ).load();
                }
            });
        },
    {# This works better than calling it in initComplete as if we reload the list from inactive staffers
               it will then add missing departments to the list.... however the dropdown won't show what
               we are sorting on for a bad experience. Leaving it here for now.
        "drawCallback": function () {
            this.api().columns().every( function () {
                var column = this;
                if(!$(column.footer()).hasClass('noDropdown')) {
                    var select = $('<select><option value=""></option></select>')
                        .appendTo( $(column.footer()).empty() )
                        .on( 'change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search( val ? '^'+val+'$' : '', true, false )
                                .draw();
                        } );

                    column.data().unique().sort().each( function ( d, j ) {
                        select.append( '<option value="'+d.name+'">'+d.name+'</option>' )
                    } );
                } else {
                    $(column.footer()).empty();
                }
            } );
        }, #}
        dom: '<"row"<"col-md-12"l<"toolbar">f>><"row"<"col-md-12"rt>><"row"<"col-md-12"i<"fbar">p>>',
        "lengthMenu": [[50, 100, 200, -1], [50, 100, 200, "All"]],
        select:"single",
        "columns": [
            {
                "className": 'details-control no_selection',
                "orderable": false,
                "data": null,
                "defaultContent": '',
                "render": function () {
                    return '<i class="fa fa-angle-double-down" aria-hidden="true"></i>';
                },
                width:"15px"
            },
            { "data": "last_name" },
            { "data": "first_name" },
            { "data": "nickname" },
            {
                "targets": 2,
                "data": 'department',
                "render": function (data, type, row) {
                    return '<a href="{{ path('org_department_view_noId') }}'+data.id + '" style="color: black">' + data.name + '</a>';
                }
            },
            { "data": "position" },
            { "data": "official_email", "orderable": false },
            {
                "targets": 1,
                "data": 'is_registered',
                "title": 'Registered?',
                "render": function (data, type, row) {
                    if (data) {
                        return '<i class="fa fa-check-circle" aria-hidden="true"></i> Yes';
                    } else {
                        return '<i class="fa fa-minus-circle" aria-hidden="true"></i> No';
                    }
                }
            },
            {
                "orderable": false,
                "targets": 1,
                "data": 'id',
                "title": '',
                "render": function (data, type, row) {
                    return '<a href="{{ path('org_staff_view_noId') }}'+data + '"><i class="fa fa-user-edit" aria-hidden="true"></i></a>';
                    {#
                    return '<a href="{{ path('org_staff_view_noId') }}'+data + '" class="btn btn-primary btn-sm">View</a>';
                    #}
                }
            }
        ],
        "ajax": "{{ path('ajax_staff_list') }}",
        "order": [[1, 'asc']]
    } );

    // Add event listener for opening and closing details
    $('#staffList tbody').on('click', 'td.details-control', function () {
        var tr = $(this).closest('tr');
        var tdi = tr.find("svg");
        var row = table.row(tr);

        if (row.child.isShown()) {
            // This row is already open - close it
            row.child.hide();
            tr.removeClass('shown');
            tdi.first().removeClass('fa-angle-double-up');
            tdi.first().addClass('fa-angle-double-down');
        }
        else {
            // Open this row
            row.child(format(row.data())).show();
            tr.addClass('shown');
            console.log(tdi);
            tdi.first().removeClass('fa-angle-double-down');
            tdi.first().addClass('fa-angle-double-up');
        }
    });

    table.on("user-select", function (e, dt, type, cell, originalEvent) {
        if ($(cell.node()).hasClass("details-control")) {
            e.preventDefault();
        }
    });
    $('.dataTables_length').addClass('bs-select');
} );
</script>
    <style>
        tfoot {
            display: table-header-group;
        }
        td.details-control {
            text-align:center;
            color:forestgreen;
            cursor: pointer;
        }
        tr.shown td.details-control {
            text-align:center;
            color:red;
        }
        .fa-check-circle {
            color: forestgreen;
        }
        .fa-minus-circle {
            color: red;
        }
        td.no_selection {
            -webkit-user-select: none; /* webkit (safari, chrome) browsers */
            -moz-user-select: none; /* mozilla browsers */
            -khtml-user-select: none; /* webkit (konqueror) browsers */
            -ms-user-select: none; /* IE10+ */
        }
        .dataTables_length {
            float:left;
        }
        .dataTables_info {
            float:left;
        }
        .fbar {
            padding-left: 5rem;
            margin-top: .8rem;
            float:right;
        }
        .dataTables_paginate.paging_simple_numbers {
            float:right;
        }

        .toolbar {
            padding-left: 1rem;
            float:left;
        }
        .toolbar>div>label {
            margin-top: .7rem;
        }
        {#
        table.table a {
            color: black;
        }
        #}
    </style>
{% endblock %}