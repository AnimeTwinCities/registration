{##
 # Copyright (c) 2018. Anime Twin Cities, Inc.
 #
 # This project, including all of the files and their contents, is licensed under the terms of MIT License
 #
 # See the LICENSE file in the root of this project for details.
#}
{% extends 'detour.html.twig' %}

{% set pageTitle = 'List Registrations' %}

{% block body %}
<div class="container bg-white">
    <div class="row">
        <div class="col-sm-12">
            <h2>Registrations</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <a href="{{ path('newRegistration') }}" class="btn btn-warning btn-sm">New Registration</a><br><br>
            <script>
                function changeYear(year) {
                    $('#year').val(year);
                }

                function reset_page() {
                    $('#page').val('1');
                }
            </script>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                <label for="registrationTypeId" class="control-label">
                    <b>Reg&nbsp;Type:</b>
                </label>
                <select name="registrationTypeId" id="registrationTypeId" onclick="search_fn()">
                    <option value="all" {{ current_RegistrationTypeId == 'all' ? 'selected' : '' }}>All</option>
                    <option disabled>──────────────</option>
                    {% for registrationType in registrationTypes %}
                        <option value="{{ registrationType.registrationTypeId }}"
                                {{ (current_RegistrationTypeId == registrationType.registrationTypeId) ? 'selected' : '' }}
                            >{{ registrationType.name }}</option>
                    {% endfor %}
                </select>
            </div>
        </div>

        <div class="col-sm-3">
            <div class="form-group">
                <label for="registrationStatusId" class="control-label">
                    <b>Reg&nbsp;Status:</b>
                </label>
                <select name="registrationStatusId" id="registrationStatusId" onclick="search_fn()">
                    <option value="all" {{ current_RegistrationStatusId == 'all' ? 'selected' : '' }}>All</option>
                    <option value="active" {{ current_RegistrationStatusId == 'active' ? 'selected' : '' }}>Active</option>
                    <option value="inactive" {{ current_RegistrationStatusId == 'inactive' ? 'selected' : '' }}>Inactive</option>
                    <option disabled>──────────────</option>
                    {% for registrationStatus in registrationStatuses %}
                        <option value="{{ registrationStatus.registrationStatusId }}"
                                {{ (current_RegistrationStatusId == registrationStatus.registrationStatusId) ? 'selected' : '' }}
                        >{{ registrationStatus.status }}</option>
                    {% endfor %}
                </select>
            </div>
        </div>

        <div class="col-sm-3">
            <div class="form-group">
                <label for="badgeTypeId" class="control-label">
                    <b>Badge Type:</b>
                </label>
                <select name="badgeTypeId" id="badgeTypeId" onclick="search_fn()">
                    <option value="all" {{ current_BadgeTypeId == 'all' ? 'selected' : '' }}>All</option>
                    <option disabled>──────────────</option>
                    {% for badgeType in badgeTypes %}
                        <option value="{{ badgeType.badgeTypeId }}"
                                {{ (current_BadgeTypeId == badgeType.badgeTypeId) ? 'selected' : '' }}
                        >{{ badgeType.description }}</option>
                    {% endfor %}
                </select>
            </div>
        </div>

        <div class="col-sm-3">
            <div class="form-group d-flex justify-content-center" style="margin-top: 1.2rem;">
                <input type="search"
                       id="search"
                       name="search"
                       value="{{ searchText }}"
                       onKeyPress="return searchenter(this,event)"
                       placeholder="Search"
                       aria-label="Search"
                       class="form-control">
                <button class="btn btn-primary btn-sm my-0 p waves-effect waves-light" type="submit" onclick="search_fn()">
                    <i class="fa fa-search"></i>
                </button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <table class="table table-striped table-sm" id="table_registrations">
                <thead class="unique-color">
                    <tr class="text-white">
                        <th class="hideWhenSmall"><div><span>Year</span></div></th>
                        <th class=""><div><span>Reg&nbsp;#</span></div></th>
                        <th class=""><div><span>Last Name</span></div></th>
                        <th class=""><div><span>First Name</span></div></th>
                        <th class="hideWhenSmall"><div><span>Badge Name</span></div></th>
                        <th class=""><div><span>Email</span></div></th>
                        <th class="hideWhenSmall"><div><span>Status</span></div></th>
                        <th class="hideWhenSmall"><div><span>Confirmation&nbsp;#</span></div></th>
                        <th class="hideWhenSmall"><div><span>Group?</span></div></th>
                        <th class=""><div><span>Badges</span></div></th>
                    </tr>
                </thead>
                <tbody id="tbody_registrations">
                </tbody>
                <thead>
                    <tr class="unique-color">
                        <th class="text-white" colspan="10" id="resultsFooter"></th>
                    </tr>
                    <tr class="">
                        <th class="text-center" colspan="10" id="listPager">
                        </th>
                    </tr>
                </thead>
            </table>
            <input type="hidden" id="page" value="{{ page }}">
        </div>
    </div>

    <script>

        $( document ).ready(function(){
            $('#registrationTypeId').change(function() {
                search_fn();
            });
            $('#registrationStatusId').change(function() {
                search_fn();
            });
            $('#badgeTypeId').change(function() {
                search_fn();
            });

            get_registration_list();
        });

        function changePage(page) {
            $('#page').val(page);
            get_registration_list();
        }

        function get_registration_list() {
            var search_text           = $('#search').val();
            var registrationTypeId   = $('#registrationTypeId').find(":selected").val();
            var registrationStatusId = $('#registrationStatusId').find(":selected").val();
            var badgeTypeId          = $('#badgeTypeId').find(":selected").val();
            var page        = $('#page').val();
            console.log(page);
            $.getJSON('{{ path('ajaxRegistrationList') }}',
                {
                    'search':search_text,
                    'page':page,
                    'registrationTypeId':registrationTypeId,
                    'registrationStatusId':registrationStatusId,
                    'badgeTypeId':badgeTypeId
                },
                function(json) {
                    $('#tbody_registrations').empty();

                    var resultsFooter = json.count_total+' Results. Showing Page '+json.page+' of '+Math.ceil(json.count_total/100)+', 100 per page';
                    $('#resultsFooter').html(resultsFooter);

                    var listPager = $('#listPager');
                    listPager.empty();

                    // Populate Registration Results
                    for (i = 0; i < json.results.length; i++) {
                        var reg = json.results[i];
                        add_registration(reg.Registration_ID, reg.Year, reg.Number, reg.LastName, reg.FirstName, reg.BadgeName, reg.Reg_Status, reg.Email,
                            reg.ConfirmationNumber, reg.group, reg.is_adult, reg.is_minor, reg.is_sponsor, reg.is_comsponsor, reg.is_staff, reg.is_guest, reg.is_vendor, reg.is_exhibitor);
                    }

                    // Populate Page Data
                    $('#page').val(json.page);
                    var totalPages = Math.ceil(json.count_total/100);

                    var prevLi = $('<li>')
                        .append($('<a>')
                            .attr('class', 'page-link')
                            .attr('id', 'pagePrev')
                            .attr('href', 'javascript:void(0);')
                            .attr('aria-label', 'Previous')
                            .append($('<span>')
                                .attr('aria-hidden', 'true')
                                .html('&laquo;')
                            )
                            .append($('<span>')
                                .attr('class', 'sr-only')
                                .html('Previous')
                            )
                        );
                    var nextLi = $('<li>')
                        .append($('<a>')
                            .attr('class', 'page-link')
                            .attr('id', 'pageNext')
                            .attr('href', 'javascript:void(0);')
                            .attr('aria-label', 'Next')
                            .append($('<span>')
                                .attr('aria-hidden', 'true')
                                .html('&raquo;')
                            )
                            .append($('<span>')
                                .attr('class', 'sr-only')
                                .html('Next')
                            )
                        );

                    var pageination = $('<ul>')
                        .attr('id', 'pageUl')
                        .attr('class', 'pagination pg-blue')
                        .append(prevLi)
                    ;

                    listPager.html(pageination);

                    var pageUl = $('#pageUl');

                    var paginatorMin = Math.max(json.page - 6, 1);
                    var paginatorMax = Math.min(json.page + 6, totalPages);

                    var renderPagination;
                    for (renderPagination = paginatorMin; renderPagination <= paginatorMax; renderPagination++) {
                        if (renderPagination === json.page) {
                            pageUl.append($('<li>')
                                .attr('class', 'page-item active')
                                .append($('<a>')
                                    .attr('class', 'page-link')
                                    .attr('href', 'javascript:void(0);')
                                    .html(renderPagination + '<span class="sr-only">(current)</span>')
                                )
                            );
                        } else {
                            pageUl.append($('<li>')
                                .attr('class', 'page-item')
                                .append($('<a>')
                                    .attr('class', 'page-link')
                                    .attr('href', 'javascript:void(0);')
                                    .attr('data-page', renderPagination)
                                    .html(renderPagination)
                                    .click(function() {
                                        console.log($( this ).attr('data-page'));
                                        changePage($( this ).attr('data-page'));
                                    })
                                )
                            );
                        }
                    }

                    pageination.append(nextLi);

                    var pagePrev = $('#pagePrev');
                    var pageNext = $('#pageNext');

                    if ((json.page - 1) >= 1) {
                        pagePrev.click(function() {
                            changePage(json.page - 1);
                        });
                    } else {
                        pagePrev.prop( "disabled", true );
                        pagePrev.addClass('disabled');
                    }

                    if ((json.page + 1) <= totalPages) {
                        pageNext.click(function() {
                            changePage(json.page + 1);
                        });
                    } else {
                        pageNext.prop( "disabled", true );
                        pageNext.addClass('disabled');
                    }
                }
            );
            window.history.pushState("object or string", "Anime Detour Registration", "/manage?search="+search_text
                + "&registrationStatusId="+registrationStatusId+"&registrationTypeId="+registrationTypeId
                + "&badgeTypeId="+badgeTypeId+"&page="+page);
        }

        function add_registration(registration_id, year, number, last_name, first_name, badge_name, reg_status, Email, ConfirmationNumber, group, is_adult, is_minor, is_sponsor,
                                  is_comsponsor, is_staff, is_guest, is_vendor, is_exhibitor) {
            var td_badges     = $('<td>');

            if (is_adult) {
                td_badges.html(td_badges.html()+'<span class="badge badge-pill orange">A</span>');
            }
            if (is_minor) {
                td_badges.html(td_badges.html()+'<span class="badge badge-pill yellow" style="color: #000000!important">M</span>');
            }
            if (is_sponsor) {
                td_badges.html(td_badges.html()+'<span class="badge badge-pill blue">S</span>');
            }
            if (is_comsponsor) {
                td_badges.html(td_badges.html()+'<span class="badge badge-pill purple">C</span>');
            }
            if (is_staff) {
                td_badges.html(td_badges.html()+'<span class="badge badge-pill red">D</span>');
            }
            if (is_guest) {
                td_badges.html(td_badges.html()+'<span class="badge badge-pill black">G</span>');
            }
            if (is_vendor) {
                td_badges.html(td_badges.html()+'<span class="badge badge-pill green">V</span>');
            }
            if (is_exhibitor) {
                td_badges.html(td_badges.html()+'<span class="badge badge-pill silver" style="color: #000000!important">E</span>');
            }
            if (group !== null) {
                group = '<a href="{{ path('group_list_slash') }}'+group+'"><i class="fas fa-users"></i></a>';
            }

            $('#table_registrations')
                .append($('<tr>')
                    .attr('id', 'tr_'+registration_id)
                    .append($('<td class="hideWhenSmall">')
                        .html(year)
                    )
                    .append($('<td>')
                        .append($('<a>')
                            .attr('href', '/registration/view/'+registration_id)
                            .html(number)
                        )
                    )
                    .append($('<td>')
                        .html(last_name)
                    )
                    .append($('<td>')
                        .html(first_name)
                    )
                    .append($('<td class="hideWhenSmall">')
                        .html(badge_name)
                    )
                    .append($('<td>')
                        .html(Email)
                    )
                    .append($('<td class="hideWhenSmall">')
                        .html(reg_status)
                    )
                    .append($('<td class="hideWhenSmall">')
                        .html(ConfirmationNumber)
                    )
                    .append($('<td class="hideWhenSmall">')
                        .html(group)
                    )
                    .append(td_badges)
                );
        }

        function searchenter(myfield,e) {
            var keycode;
            if (window.event) keycode = window.event.keyCode;
            else if (e) keycode = e.which;
            else return true;

            if (keycode == 13) {
                search_fn();
                return false;
            }
            else
                return true;
        }

        function search_fn() {
            reset_page();
            get_registration_list();
        }

        var timeout;
        $('input[type=search]').keypress(function() {
            if(timeout) {
                clearTimeout(timeout);
                timeout = null;
            }

            timeout = setTimeout(search_fn, 100)
        });
        /*
         * Start Barcode checks
         */
        JsonIsValidBarcodeURL = "{{ path('apiValidateBarcode') }}";
        function checkForBarcode(barcode) {
            if ( !isBarcodeStyle(barcode) ) {
                return;
                //
            }

            $.getJSON(
                JsonIsValidBarcodeURL,
                {barcode: barcode},
                function(json) {
                    if ( json.valid ) {
                        window.location.href = '/registration/view/' + json.registrationID;
                    } else {
                        alert('Invalid Barcode');
                    }
                }
            );
        }

        function isBarcodeStyle(barcode) {
            if ( !barcode ) {
                return false;
            }

            if ( barcode.length < 10) {
                return false;
            }

            if ( barcode.substring(0,4) == "$AD-" ) {
                return true;
            }

            if ( barcode.substring(0,1) == "@" && barcode.substring(2,7).trim() == "ANSI" ) {
                return true;
            }

            return false;
        }

        var KeysPressed = "";
        var LastKeyPressTime;
        $(document.body).keypress(function(event) {
            barcodeCatch(event);
        });

        var KeysPressed = "";
        var BarcodeTimer = new Date().getTime();
        function barcodeCatch(event) {
            if ( event.timeStamp - LastKeyPressTime < 10000 ) {
                clearTimeout(BarcodeTimer);
            }
            LastKeyPressTime = event.timeStamp;
            key = String.fromCharCode(event.keyCode).replace(/(?:\r\n|\r|\n)/g, "_");
            KeysPressed = KeysPressed + String.fromCharCode(event.keyCode);
            BarcodeTimer = window.setTimeout(
                function() {
                    checkForBarcode(KeysPressed);
                    KeysPressed = "";
                }, 1000);
        }
    </script>
</div>


<style>
    .badge-pill {
        display: inline;
        font-size: 110%;
    }
</style>
{% endblock %}
